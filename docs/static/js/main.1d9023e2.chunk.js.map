{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","console","log","preventDefault","trim","length","cat","handleSubmit","type","value","onChange","handleInputChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"qLAuCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAAU,SAACC,GAAD,OAXG,SAACA,GACpBC,QAAQC,IAAI,eACZF,EAAEG,iBACCN,EAAWO,OAAOC,OAAS,IAC5BV,GAAc,SAAAW,GAAG,OAAKT,GAAL,mBAAoBS,OACrCR,EAAc,KAMOS,CAAaP,IAApC,SACE,uBACEQ,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAACV,GAAD,OAnBU,SAACA,GACzBF,EAAcE,GAkBOW,CAAkBX,EAAEY,OAAOH,a,+BCvBtCI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,2FAEmEC,UAAWH,GAF9E,sBAGII,MAAMF,GAHV,cAGdG,EAHc,gBAIGA,EAAUC,OAJb,uBAIZC,EAJY,EAIZA,KACRpB,QAAQC,IAAImB,GAENC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXlB,kBAebM,GAfa,4CAAH,sDCDRO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGvC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCJOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAERxB,EAAQC,GAAUwB,MAAK,SAACd,GAAD,OAEvBe,YAAW,WACPH,EAAS,CACPf,KAAMG,EACNU,SAAS,MAEV,UAGJ,CAACpB,IAEGqB,EDlB2BK,CAAa1B,GAAvCoB,EAAR,EAAQA,QAAeP,EAAvB,EAAiBN,KAEjB,OACE,qCACE,oBAAIS,UAAY,mCAAhB,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAGZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZnBgB,EAAe,WAG1B,MAAoC7C,mBAAS,CAAC,aAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KASA,OACE,gCACE,yCAEC,cAAC,EAAD,CAAaA,cAAiBA,IAE/B,uBAEA,6BAEE+C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OAEV,cAAC,EAAD,CAEA7B,SAAYA,GADPA,Y,MCxBlB8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1d9023e2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState(''); // no puede ser undefined!.... por que se usa el valor en el HTML\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log('submit Done');\r\n    e.preventDefault(); // previene el refresh del navegador por defecto\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cat => [inputValue, ...cat,]);\r\n      setInputValue('');\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => handleInputChange(e.target.value)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes ={\r\n  setCategories : PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\nexport default AddCategory;\r\n","\r\n\r\n\r\n export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?&api_key=aKlhpKg9wuK3eG2qHOTy7CwTZbEoDx7E&q=${ encodeURI( category ) }&limit=10`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    console.log(data);\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    \r\n    return gifs;\r\n\r\n  };","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n \r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { loading, data: images } = useFetchGifs(category); // data: images es una forma de renombrar data\r\n\r\n  return (\r\n    <>\r\n      <h3 className = \"animate__animated animate__pulse\">{category}</h3>\r\n      \r\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n      \r\n      \r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs(category).then((img) =>\r\n      \r\n    setTimeout(() => {\r\n        setState({\r\n          data: img,\r\n          loading: false,\r\n        });\r\n      }, 2000)\r\n    );\r\n\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  //const categories = [\"One Puch\", \"Samurai X\", \"Dragon Ball\"];\r\n\r\n  const [categories, setCategories] = useState([\"One Puch\"]);\r\n\r\n\r\n/* const handleAdd = () => {\r\n   // setCategories([...categories, 'uno mas al final']);\r\n   // setCategories([ 'uno mas al principio',...categories])\r\n   setCategories(cat => [...cat, 'uno mas al final']);\r\n} */\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gif App</h2>\r\n           \r\n       <AddCategory setCategories= { setCategories } />\r\n\r\n      <hr />\r\n     {/*  <button onClick={handleAdd}>Agregar</button> */}\r\n      <ol>\r\n        {\r\n        categories.map((category, index) => (\r\n            \r\n             <GifGrid \r\n             key={category}\r\n             category = {category} />\r\n         ))\r\n        }\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}